(rule
 (target dune_gen.ml)
 (action
  (with-stdout-to
   %{target}
   (run ocaml-mdx dune-gen))))

(executable
 (name dune_gen)
 (modules dune_gen)
 (modes byte)
 (libraries mdx.test))

(rule
 (target dune-mdx-nondeterministic.deterministic)
 (deps
  dune_gen.exe
  (:input dune-mdx-nondeterministic))
 (action
  (with-stdout-to
   %{target}
   (run ./dune_gen.exe %{input}))))

(rule
 (target dune-mdx-nondeterministic.nondeterministic)
 (deps
  dune_gen.exe
  (:input dune-mdx-nondeterministic))
 (action
  (setenv
   MDX_RUN_NON_DETERMINISTIC
   1
   (with-stdout-to
    %{target}
    (run ./dune_gen.exe %{input})))))

(rule
 (alias runtest)
 (action
  (diff %{dep:dune-mdx-nondeterministic.expected}
    %{dep:dune-mdx-nondeterministic.deterministic})))

;; make sure the non-deterministic is different from the deterministic

(rule
 (alias runtest)
 (action
  (with-accepted-exit-codes
   1
   (ignore-stdout
    (run diff %{dep:dune-mdx-nondeterministic.expected}
      %{dep:dune-mdx-nondeterministic.nondeterministic})))))
